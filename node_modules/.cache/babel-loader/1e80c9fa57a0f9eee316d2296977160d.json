{"ast":null,"code":"import _defineProperty from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pallavi/projects/react/apeda-traceability/src/Screens/demo/demo.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap';\n// import api fro\n\nfunction Demo() {\n  var _this = this;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    options = _useState2[0],\n    setOptions = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    option = _useState4[0],\n    setOption = _useState4[1];\n  var obj = [{\n    \"option\": \"Internal Inspection\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"mid_year\": \"Mid Year\",\n        \"scope_renewal\": \"Scope Renewal\"\n      },\n      \"Select_Year\": {\n        \"Current\": \"Current\",\n        \"Previous\": \"Previous\"\n      }\n    }]\n  }, {\n    \"option\": \"Harvesting\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      },\n      \"Select_Season\": {\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\"\n      },\n      \"Farm_Type\": {\n        \"single_farm\": \"Single Farm\",\n        \"multi_farm\": \"Multi_Farm\"\n      }\n    }]\n  }, {\n    \"option\": \"Lot Creation\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      },\n      \"Organic_Status\": {\n        \"organic\": \"Organic\",\n        \"2nd year conversion\": \"2nd Year Conversion\",\n        \"1st year conversion\": \"1st Year Conversion\",\n        \"3rd year conversion\": \"3rd Year Conversion\",\n        \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n        \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n      }\n    }]\n  }, {\n    \"option\": \"Crop Entry\",\n    \"nested_option\": [{\n      \"select_Season\": {\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\",\n        \"post harvest activities\": \"Post Harvest Activities\"\n      },\n      \"Select_Scope\": {\n        \"old_ICS\": \"Old ICS\",\n        \"new_ICS\": \"New ICS\",\n        \"amendment\": \"Amendment\"\n      }\n    }]\n  }];\n  var IndexPage = function IndexPage() {\n    // Create state variables\n    var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      responseData = _React$useState2[0],\n      setResponseData = _React$useState2[1]; // fetches data\n    var fetchData = function fetchData(e) {\n      e.preventDefault();\n      api.getData().then(function (response) {\n        setResponseData(response.data);\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n  };\n  var handleChange = function handleChange(event) {\n    event.persist();\n    var name = event.target.name;\n    var value = event.target.value;\n    // console.log(value)\n    setOptions(function (values) {\n      return _objectSpread({}, values, _defineProperty({}, name, value));\n    });\n    setOption(value);\n  };\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, responseData.title), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return fetchData(e);\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Click Me For Data\"), responseData.dates && responseData.dates.map(function (date) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 32\n      }\n    }, date);\n  })));\n  {/* <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n          <Form.Label>Flow</Form.Label><br></br>\n          <Form.Select aria-label=\"Default select example\" size='lg' className='selectflow' name='flow' value={options.flow || \"\"} onChange={handleChange}>\n              <option>select Flow</option>\n              <option value=\"Farmer Registration\">Farmer Registration</option>\n              <option value=\"Internal Inspection\">Internal Inspection</option>\n              <option value=\"Lot Creation\">Lot Creation</option>\n              <option value=\"Crop Entry\">Crop Entry</option>\n              <option value=\"Harvesting\">Harvesting</option>\n          </Form.Select>\n      </Form.Group> */}\n  {/* <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n          {\n              obj.map(data => {\n                  if (data.option === option) {\n                      return (data.nested_option.map((n_val) => {\n                          return (\n                              <>{Object.entries(n_val).map(d => {\n                                  return (\n                                      <>\n                                          <Form.Label>{d[0]}</Form.Label><br /> */}\n  {/* <h3>\n                                              {d[0]}\n                                          </h3> */}\n  {/* {\n                                              Object.values(d[1]).map(n => {\n                                                  return (\n                                                      <>\n                                                          <Form.Check\n                                                              inline\n                                                              type=\"radio\"\n                                                              label={n} */}\n  // checked={kindOfStand === { n }}\n  {/* onChange={handleChange}\n                                                              value={n}\n                                                          /><br />\n                                                      </> */}\n  // <p>{n}</ p>\n  {/* )\n                                              })}\n                                      </>\n                                  )\n                              })}\n                              </>\n                          )\n                      })\n                      )\n                  }\n              })\n          }\n      </Form.Group> */}\n}","map":{"version":3,"names":["React","useState","Button","Form","InputGroup","Row","Col","Demo","options","setOptions","option","setOption","obj","IndexPage","responseData","setResponseData","fetchData","e","preventDefault","api","getData","then","response","data","console","log","catch","error","handleChange","event","persist","name","target","value","values","handleSubmit","title","dates","map","date"],"sources":["/home/pallavi/projects/react/apeda-traceability/src/Screens/demo/demo.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap'\n// import api fro\n\nfunction Demo() {\n\n    const [options, setOptions] = useState({});\n    const [option, setOption] = useState('');\n    const obj = [\n        {\n            \"option\": \"Internal Inspection\",\n            \"nested_option\": [{\n                \"Select_Scope\": {\n                    \"mid_year\": \"Mid Year\",\n                    \"scope_renewal\": \"Scope Renewal\"\n                },\n                \"Select_Year\": {\n                    \"Current\": \"Current\",\n                    \"Previous\": \"Previous\"\n                }\n\n            }]\n        },\n        {\n            \"option\": \"Harvesting\",\n            \"nested_option\": [{\n                \"Select_Scope\": {\n                    \"current\": \"Current\",\n                    \"previous\": \"Previous\"\n                },\n                \"Select_Season\": {\n                    \"kharif\": \"Kharif\",\n                    \"rabi\": \"Rabi\",\n                    \"zaid\": \"Zaid\",\n                    \"perennial\": \"Perennial\"\n                },\n                \"Farm_Type\": {\n                    \"single_farm\": \"Single Farm\",\n                    \"multi_farm\": \"Multi_Farm\"\n                }\n            }]\n        },\n        {\n            \"option\": \"Lot Creation\",\n            \"nested_option\": [{\n                \"Select_Scope\": {\n                    \"current\": \"Current\",\n                    \"previous\": \"Previous\"\n                },\n                \"Organic_Status\": {\n                    \"organic\": \"Organic\",\n                    \"2nd year conversion\": \"2nd Year Conversion\",\n                    \"1st year conversion\": \"1st Year Conversion\",\n                    \"3rd year conversion\": \"3rd Year Conversion\",\n                    \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n                    \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n                }\n            }]\n\n        },\n        {\n            \"option\": \"Crop Entry\",\n            \"nested_option\": [{\n                \"select_Season\": {\n                    \"kharif\": \"Kharif\",\n                    \"rabi\": \"Rabi\",\n                    \"zaid\": \"Zaid\",\n                    \"perennial\": \"Perennial\",\n                    \"post harvest activities\": \"Post Harvest Activities\"\n                },\n                \"Select_Scope\": {\n                    \"old_ICS\": \"Old ICS\",\n                    \"new_ICS\": \"New ICS\",\n                    \"amendment\": \"Amendment\"\n                }\n            }]\n        }\n    ]\n    const IndexPage = () => {\n        // Create state variables\n        let [responseData, setResponseData] = React.useState('')\n        // fetches data\n        const fetchData = (e) => {\n            e.preventDefault()\n            api.getData()\n                .then((response) => {\n                    setResponseData(response.data)\n                    console.log(response)\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n\n    }\n\n\n\n\n\n\n        const handleChange = (event) => {\n            event.persist();\n            const name = event.target.name;\n            const value = event.target.value;\n            // console.log(value)\n            setOptions(values => ({ ...values, [name]: value }))\n            setOption(value)\n        };\n\n\n        const handleSubmit = (event) => {\n            event.preventDefault();\n        }\n\n        return (\n            <div className='content-wrapper'>\n                <div>\n                    <h1>{responseData.title}</h1>\n                    <button onClick={(e) => fetchData(e)} type='button'>Click Me For Data</button>\n                    {responseData.dates && responseData.dates.map(date => {\n                        return <p>{date}</p>\n                    })}\n                </div>\n\n            </div>\n        )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        {/* <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n                <Form.Label>Flow</Form.Label><br></br>\n                <Form.Select aria-label=\"Default select example\" size='lg' className='selectflow' name='flow' value={options.flow || \"\"} onChange={handleChange}>\n                    <option>select Flow</option>\n                    <option value=\"Farmer Registration\">Farmer Registration</option>\n                    <option value=\"Internal Inspection\">Internal Inspection</option>\n                    <option value=\"Lot Creation\">Lot Creation</option>\n                    <option value=\"Crop Entry\">Crop Entry</option>\n                    <option value=\"Harvesting\">Harvesting</option>\n                </Form.Select>\n            </Form.Group> */}\n        {/* <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n                {\n                    obj.map(data => {\n                        if (data.option === option) {\n                            return (data.nested_option.map((n_val) => {\n                                return (\n                                    <>{Object.entries(n_val).map(d => {\n                                        return (\n                                            <>\n                                                <Form.Label>{d[0]}</Form.Label><br /> */}\n        {/* <h3>\n                                                    {d[0]}\n                                                </h3> */}\n        {/* {\n                                                    Object.values(d[1]).map(n => {\n                                                        return (\n                                                            <>\n                                                                <Form.Check\n                                                                    inline\n                                                                    type=\"radio\"\n                                                                    label={n} */}\n        // checked={kindOfStand === { n }}\n        {/* onChange={handleChange}\n                                                                    value={n}\n                                                                /><br />\n                                                            </> */}\n        // <p>{n}</ p>\n        {/* )\n                                                    })}\n                                            </>\n                                        )\n                                    })}\n                                    </>\n                                )\n                            })\n                            )\n                        }\n                    })\n                }\n            </Form.Group> */}\n\n    }\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}