{"ast":null,"code":"import _slicedToArray from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pallavi/projects/react/apeda-traceability/src/Screens/User_Setting/update_user/update_user.jsx\";\nimport React from \"react\";\nfunction Update_user() {\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    img = _useState2[0],\n    setImg = _useState2[1];\n  var data = [{\n    id: 1,\n    name: \"data1\"\n  }, {\n    id: 2,\n    name: \"data2\"\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, data.map(function (e, idx) {\n    return console.log(e);\n  }));\n}\n//   return (\n//     <>\n//       {data.map((e, idx) => {\n//         return (\n//           {img===idx ? (\n//             <input placeholder={e.name} style={{display: idEdit == e.id ? 'block' : 'none'}}/> //<== Conditionaly to appear or not\n//           ) : (\n//             <div>\n//               <p>{e.name}</p>\n//               <button onClick={() => {\n//                  setImg(idx)\n//                 }\n//                }>edit</button>\n//             </div>\n//           )}\n//         )\n//       }\n//     </>\n//   )\n// }\n\nexport default Update_user;","map":{"version":3,"names":["React","Update_user","useState","img","setImg","data","id","name","map","e","idx","console","log"],"sources":["/home/pallavi/projects/react/apeda-traceability/src/Screens/User_Setting/update_user/update_user.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction Update_user() {\n  const [img, setImg] = useState(-1);\n\n  const data = [\n    { id: 1, name: \"data1\" },\n    { id: 2, name: \"data2\" },\n  ];\n\n  return (\n    <>\n        {data.map((e, idx) => {\n            return (\n                console.log(e, )\n            )\n        })}\n    </>\n  )\n}\n//   return (\n//     <>\n//       {data.map((e, idx) => {\n//         return (\n//           {img===idx ? (\n//             <input placeholder={e.name} style={{display: idEdit == e.id ? 'block' : 'none'}}/> //<== Conditionaly to appear or not\n//           ) : (\n//             <div>\n//               <p>{e.name}</p>\n//               <button onClick={() => {\n//                  setImg(idx)\n//                 }\n//                }>edit</button>\n//             </div>\n//           )}\n//         )\n//       }\n//     </>\n//   )\n// }\n\nexport default Update_user;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,GAAG;EAAA,gBACCC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA3BC,GAAG;IAAEC,MAAM;EAElB,IAAMC,IAAI,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CACzB;EAED,oBACE;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKF,IAAI,CAACG,GAAG,CAAC,UAACC,CAAC,EAAEC,GAAG,EAAK;IAClB,OACIC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAG;EAExB,CAAC,CAAC,CACH;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeR,WAAW"},"metadata":{},"sourceType":"module"}