{"ast":null,"code":"import _defineProperty from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pallavi/projects/react/apeda-traceability/src/Screens/TraceneForm/tracenetForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap';\nimport './tracenetForm.css';\nimport axios from 'axios';\nimport Navigation from '../../Components/navigation/navigation';\n// import { Link } from 'react-router-dom';\n\nfunction TracenetForm() {\n  var _this = this;\n  var _useState = useState({\n      \"username\": '',\n      \"password\": '',\n      \"flow\": '',\n      \"file\": '',\n      \"radio_selection\": {}\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputs = _useState2[0],\n    setInput = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    validated = _useState4[0],\n    setValidated = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isCheckin = _useState6[0],\n    setIschecked = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    radioOption = _useState8[0],\n    setRadioOption = _useState8[1];\n  var inputHandler = function inputHandler(e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n    if (e.target.files) {\n      setInput(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, name, e.target.files[0]));\n      });\n      // console.log(inputs)\n    } else {\n      setInput(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, name, value));\n      });\n    }\n  };\n  var obj = [{\n    \"option\": \"internal_inspection\",\n    \"nested_option\": [{\n      \"Select_Scope_type\": {\n        \"mid_year\": \"Mid Year\",\n        \"scope_renewal\": \"Scope Renewal\"\n      },\n      \"Select_Scope\": {\n        \"Current\": \"Current\",\n        \"Previous\": \"Previous\"\n      }\n    }]\n  }, {\n    \"option\": \"harvesting\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      },\n      \"Select_Season\": {\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\"\n      },\n      \"Farm_Type\": {\n        \"single_farm\": \"Single Farm\",\n        \"multi_farm\": \"Multi_Farm\"\n      }\n    }]\n  }, {\n    \"option\": \"lot_creation\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      },\n      \"Organic_Status\": {\n        \"organic\": \"Organic\",\n        \"2nd year conversion\": \"2nd Year Conversion\",\n        \"1st year conversion\": \"1st Year Conversion\",\n        \"3rd year conversion\": \"3rd Year Conversion\",\n        \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n        \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n      },\n      \"Harvest_Year\": ['2022', '2021', '2020', '2019']\n    }]\n  }, {\n    \"option\": \"crop_entry\",\n    \"nested_option\": [{\n      \"select_Season\": {\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\",\n        \"post harvest activities\": \"Post Harvest Activities\"\n      },\n      \"Select_Scope\": {\n        \"old_ICS\": \"Old ICS\",\n        \"new_ICS\": \"New ICS\",\n        \"amendment\": \"Amendment\"\n      }\n    }]\n  }];\n  function jsonBlob(obj) {\n    return new Blob([JSON.stringify(obj)], {\n      type: \"application/json\"\n    });\n  }\n  var handleSubmit = function handleSubmit(event) {\n    var form = event.currentTarget;\n    event.preventDefault();\n    console.log(\"-----inouts----\", inputs);\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n\n    //   axios.post(\"http://localhost:8000/tracenet/\", data, \n    //   {\n    //     headers : {'Content-Type': 'multipart/form-data'}\n    // }\n    //   )\n    //     .then((res) =>\n    //       console.log(res.status_code)\n    //     )\n    //     .catch((error) => {\n    //       console.log(error)\n    //     })\n\n    var data = {};\n    data.username = inputs.username;\n    data.password = inputs.password;\n    data.flow = inputs.flow;\n    data.options = inputs.radio_selection;\n    console.log(data.options);\n    var formData = new FormData();\n    formData.append(\"file\", inputs.file);\n    console.log(typeof data);\n    formData.append(\"data\", JSON.stringify(data));\n    // formData.append(\"data\")\n    console.log(formData);\n    axios.post(\"http://localhost:8000/tracenet/\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (res) {\n      return console.log(res.status_code);\n    });\n  };\n  var radioSelector = function radioSelector(e) {\n    var name = e.target.id;\n    var key = e.target.name;\n    var value = e.target.value;\n    console.log(name, key, value);\n    // const item = {\n    //   [name]: value\n    // }\n    // const item = {}\n    inputs.radio_selection[key] = name;\n    //   setRadioOption({\n    //     [key]: name\n    // })\n    // setRadioOption({...prevState , [key]:name})\n    console.log(inputs);\n  };\n\n  // useEffect(() => {\n  //   if (radioOption) {\n  //     inputs.radio_selection.push(radioOption);\n  //     console.log(inputs)\n  //   }\n  // }, [radioOption]);\n\n  var radioView = function radioView(list) {\n    console.log(inputs.flow);\n    var template = obj.map(function (data) {\n      if (data.option === inputs.flow) {\n        return data.nested_option.map(function (n_val) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: data.option,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }\n          }, Object.entries(n_val).map(function (d) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Form.Label, {\n              key: d[0],\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }\n            }, d[0]), /*#__PURE__*/React.createElement(\"br\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 63\n              }\n            }), Object.values(d[1]).map(function (n) {\n              return /*#__PURE__*/React.createElement(React.Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 27\n                }\n              }, /*#__PURE__*/React.createElement(Form.Check, {\n                inline: true,\n                name: d[0],\n                id: n,\n                \"aria-label\": \"radio 1\",\n                type: \"radio\",\n                label: n,\n                checked: isCheckin ? true : isCheckin[n],\n                onChange: radioSelector,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 29\n                }\n              }), /*#__PURE__*/React.createElement(\"br\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 31\n                }\n              }));\n            }));\n          }));\n        });\n      }\n    });\n    return template;\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"wrapper\">\n    React.createElement(\"div\", {\n      className: \"content\\\\wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"Sign In using Tracenet credentials\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"8\",\n      controlId: \"validationCustomUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n      hasValidation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, \"@\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      required: true,\n      name: \"username\",\n      onChange: inputHandler\n      // value={inputs.userrname}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, \"Please choose a username.\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"8\",\n      controlId: \"validationCustom01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"****\"\n      // value={inputs.password || \"\"}\n      ,\n      onChange: inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, \"Incorrect Password\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"8\",\n      controlId: \"validationCustom02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, \"Flow\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(Form.Select, {\n      \"aria-label\": \"Default select example\",\n      size: \"lg\",\n      className: \"selectflow\",\n      name: \"flow\",\n      onChange: inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 23\n      }\n    }, \"select Flow\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"farmer_registration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, \"Farmer Registration\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"internal_inspection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, \"Internal Inspection\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lot_creation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, \"Lot Creation\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"crop_entry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 23\n      }\n    }, \"Crop Entry\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"harvesting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 23\n      }\n    }, \"Harvesting\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"12\",\n      controlId: \"validationCustom02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, radioView()), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"8\",\n      controlId: \"validationCustom03\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, \"Select File\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"file\",\n      name: \"file\"\n      // value={inputs.file || \"\"}\n      ,\n      onChange: inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Check, {\n      required: true,\n      label: \"I agree that this tool will fill the captcha and data on Tracenet website on my behalf.\",\n      feedback: \"You must agree before submitting.\",\n      feedbackType: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, \"Submit form\"))))))\n    // </div>\n  );\n}\n\nexport default TracenetForm;","map":{"version":3,"names":["React","useState","useEffect","Button","Form","InputGroup","Row","Col","axios","Navigation","TracenetForm","inputs","setInput","validated","setValidated","isCheckin","setIschecked","radioOption","setRadioOption","inputHandler","e","target","name","value","files","prevState","obj","jsonBlob","Blob","JSON","stringify","type","handleSubmit","event","form","currentTarget","preventDefault","console","log","checkValidity","stopPropagation","data","username","password","flow","options","radio_selection","formData","FormData","append","file","post","headers","then","res","status_code","radioSelector","id","key","radioView","list","template","map","option","nested_option","n_val","Object","entries","d","values","n"],"sources":["/home/pallavi/projects/react/apeda-traceability/src/Screens/TraceneForm/tracenetForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap'\nimport './tracenetForm.css'\nimport axios from 'axios';\nimport Navigation from '../../Components/navigation/navigation';\n// import { Link } from 'react-router-dom';\n\nfunction TracenetForm() {\n\n  const [inputs, setInput] = useState({\n    \"username\": '',\n    \"password\": '',\n    \"flow\": '',\n    \"file\": '',\n    \"radio_selection\": {}\n  });\n  const [validated, setValidated] = useState(false);\n  const [isCheckin, setIschecked] = useState(false);\n  const [radioOption, setRadioOption] = useState();\n\n  const inputHandler = (e) => {\n    var { name, value } = e.target;\n    if (e.target.files) {\n      setInput((prevState) => ({\n        ...prevState,\n        [name]: e.target.files[0]\n      }));\n      // console.log(inputs)\n    }\n    else {\n      setInput((prevState) => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n\n  };\n\n  const obj = [\n    {\n      \"option\": \"internal_inspection\",\n      \"nested_option\": [{\n        \"Select_Scope_type\": {\n          \"mid_year\": \"Mid Year\",\n          \"scope_renewal\": \"Scope Renewal\"\n        },\n        \"Select_Scope\": {\n          \"Current\": \"Current\",\n          \"Previous\": \"Previous\"\n        }\n\n      }]\n    },\n    {\n      \"option\": \"harvesting\",\n      \"nested_option\": [{\n        \"Select_Scope\": {\n          \"current\": \"Current\",\n          \"previous\": \"Previous\"\n        },\n        \"Select_Season\": {\n          \"kharif\": \"Kharif\",\n          \"rabi\": \"Rabi\",\n          \"zaid\": \"Zaid\",\n          \"perennial\": \"Perennial\"\n        },\n        \"Farm_Type\": {\n          \"single_farm\": \"Single Farm\",\n          \"multi_farm\": \"Multi_Farm\"\n        }\n      }]\n    },\n    {\n      \"option\": \"lot_creation\",\n      \"nested_option\": [{\n        \"Select_Scope\": {\n          \"current\": \"Current\",\n          \"previous\": \"Previous\"\n        },\n        \"Organic_Status\": {\n          \"organic\": \"Organic\",\n          \"2nd year conversion\": \"2nd Year Conversion\",\n          \"1st year conversion\": \"1st Year Conversion\",\n          \"3rd year conversion\": \"3rd Year Conversion\",\n          \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n          \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n        },\n        \"Harvest_Year\" : ['2022', '2021', '2020', '2019']\n      }]\n\n    },\n    {\n      \"option\": \"crop_entry\",\n      \"nested_option\": [{\n        \"select_Season\": {\n          \"kharif\": \"Kharif\",\n          \"rabi\": \"Rabi\",\n          \"zaid\": \"Zaid\",\n          \"perennial\": \"Perennial\",\n          \"post harvest activities\": \"Post Harvest Activities\"\n        },\n        \"Select_Scope\": {\n          \"old_ICS\": \"Old ICS\",\n          \"new_ICS\": \"New ICS\",\n          \"amendment\": \"Amendment\"\n        }\n      }]\n    }\n  ]\n  function jsonBlob(obj) {\n    return new Blob([JSON.stringify(obj)], {\n      type: \"application/json\",\n    });\n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    console.log(\"-----inouts----\", inputs)\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n   \n    \n    \n  //   axios.post(\"http://localhost:8000/tracenet/\", data, \n  //   {\n  //     headers : {'Content-Type': 'multipart/form-data'}\n  // }\n  //   )\n  //     .then((res) =>\n  //       console.log(res.status_code)\n  //     )\n  //     .catch((error) => {\n  //       console.log(error)\n  //     })\n\n\n  const data = {}\n  data.username = inputs.username\n  data.password = inputs.password\n  data.flow = inputs.flow\n  data.options = inputs.radio_selection\n  console.log(data.options)\n  const formData = new FormData();\n  formData.append(\"file\", inputs.file)\n  \n \n  console.log(typeof(data))\n  formData.append(\"data\", JSON.stringify(data))\n  // formData.append(\"data\")\n  console.log(formData)\n  axios.post(\n    \"http://localhost:8000/tracenet/\", formData,\n    {\n          headers : {'Content-Type': 'multipart/form-data'}\n      }\n    \n  )\n  .then((res) =>\n        console.log(res.status_code)\n      )\n  }\n\n  const radioSelector = (e) => {\n\n    const name = e.target.id\n    const key = e.target.name;\n    const value = e.target.value;\n    console.log(name, key, value)\n    // const item = {\n    //   [name]: value\n    // }\n    // const item = {}\n    inputs.radio_selection[key] = name\n  //   setRadioOption({\n  //     [key]: name\n  // })\n    // setRadioOption({...prevState , [key]:name})\n    console.log(inputs)\n  }\n\n  // useEffect(() => {\n  //   if (radioOption) {\n  //     inputs.radio_selection.push(radioOption);\n  //     console.log(inputs)\n  //   }\n  // }, [radioOption]);\n\n  const radioView = (list) => {\n    console.log(inputs.flow)\n    let template =\n      obj.map(data => {\n        if (data.option === inputs.flow) {\n          return (data.nested_option.map((n_val) => {\n            return (\n              <div key={data.option}>{Object.entries(n_val).map(d => {\n                return (\n                  <>\n                    <Form.Label key={d[0]}>{d[0]}</Form.Label><br />\n                    {\n                      Object.values(d[1]).map(n => {\n                        return (\n                          <>\n                            <Form.Check\n                              inline\n                              name={d[0]}\n                              id={n}\n                              aria-label='radio 1'\n                              type=\"radio\"\n                              label={n}\n                              checked={isCheckin ? true : isCheckin[n]}\n                              onChange={radioSelector}\n                            /><br />\n                          </>\n                        )\n                      })}\n                  </>\n                )\n              })}\n              </ div>\n            )\n          })\n          )\n        }\n      })\n    return template\n  }\n\n  return (\n\n    \n    // <div className=\"wrapper\">\n      <div className=\"content\\wrapper\">\n        <Navigation></Navigation>\n        <div className=\"container-fluid\">\n          <div className=\"card\" >\n            <div className=\"card-header\">Sign In using Tracenet credentials</div>\n            <div className=\"card-body\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Row className=\"mb-3\">\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustomUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <InputGroup hasValidation>\n                      <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        aria-describedby=\"inputGroupPrepend\"\n                        required\n                        name=\"username\"\n                        onChange={inputHandler}\n                      // value={inputs.userrname}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please choose a username.\n                      </Form.Control.Feedback>\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustom01\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      name=\"password\"\n                      placeholder=\"****\"\n                      // value={inputs.password || \"\"}\n                      onChange={inputHandler}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">Incorrect Password</Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n                    <Form.Label>Flow</Form.Label><br></br>\n                    <Form.Select aria-label=\"Default select example\" size='lg' className='selectflow' name='flow' onChange={inputHandler}>\n                      <option>select Flow</option>\n                      <option value=\"farmer_registration\">Farmer Registration</option>\n                      <option value=\"internal_inspection\">Internal Inspection</option>\n                      <option value=\"lot_creation\">Lot Creation</option>\n                      <option value=\"crop_entry\">Crop Entry</option>\n                      <option value=\"harvesting\">Harvesting</option>\n                    </Form.Select>\n                    <Form.Control.Feedback type=\"invalid\">Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n\n                </Row>\n                <Form.Group className=\"mb-3\">\n\n                  <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\" >\n                    {\n                      radioView()\n                    }\n                  </Form.Group>\n\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustom03\" >\n                    <Form.Label>Select File</Form.Label><br></br>\n                    <Form.Control\n                      required\n                      type=\"file\"\n                      name=\"file\"\n                      // value={inputs.file || \"\"}\n                      onChange={inputHandler}\n                    />\n                  </Form.Group>\n\n                  <Form.Check\n                    required\n                    label=\"I agree that this tool will fill the captcha and data on Tracenet website on my behalf.\"\n                    feedback=\"You must agree before submitting.\"\n                    feedbackType=\"invalid\"\n                  />\n                </Form.Group>\n                <Button type=\"submit\">Submit form</Button>\n              </Form>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    // </div>\n  )\n}\n\nexport default TracenetForm\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}