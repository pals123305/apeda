{"ast":null,"code":"\"use strict\";\n\nvar _interopRequire = function _interopRequire(obj) {\n  return obj && obj.__esModule ? obj[\"default\"] : obj;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var key in props) {\n      var prop = props[key];\n      prop.configurable = true;\n      if (prop.value) prop.writable = true;\n    }\n    Object.defineProperties(target, props);\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) subClass.__proto__ = superClass;\n};\nvar _classCallCheck = function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar React = _interopRequire(require(\"react\"));\nvar DropdownMenuItem = _interopRequire(require(\"./DropdownMenuItem\"));\nvar DropdownMenu = function (_React$Component) {\n  function DropdownMenu() {\n    _classCallCheck(this, DropdownMenu);\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n  _inherits(DropdownMenu, _React$Component);\n  _createClass(DropdownMenu, {\n    render: {\n      value: function render() {\n        var self = this;\n        var menuItems = this.props.items.map(function (item, key) {\n          return React.createElement(DropdownMenuItem, {\n            key: key,\n            value: item.value,\n            onSelect: self.props.onSelect,\n            disabled: item.disabled,\n            isDivider: item.isDivider\n          }, item.text);\n        });\n        return React.createElement(\"ul\", {\n          className: \"dropdown-menu\",\n          role: \"menu\",\n          \"aria-labelledby\": this.props.id\n        }, menuItems);\n      }\n    }\n  });\n  return DropdownMenu;\n}(React.Component);\nmodule.exports = DropdownMenu;","map":null,"metadata":{},"sourceType":"script"}