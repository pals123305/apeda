{"ast":null,"code":"import _objectSpread from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pallavi/projects/react/apeda-traceability/src/Screens/User_Setting/create_user/create_user.jsx\";\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nfunction Create_user() {\n  var _this = this;\n  var errors = [];\n  var user_data = JSON.parse(localStorage.getItem(\"user_data\"));\n  var _useState = useState({\n      tracenet_username: \"\",\n      tracenet_password: \"\",\n      user: user_data.id\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setuser = _useState2[1];\n  var initialValues = {\n    tracenet_username: \"\",\n    tracenet_password: \"\",\n    user: user_data.id\n  };\n  var navigate = useNavigate();\n  var validationSchema = Yup.object({\n    tracenet_username: Yup.string().required(\"*Email is required\"),\n    tracenet_password: Yup.string().required(\"*Password is required\")\n  });\n\n  //   const handleChange = (e) => {\n  //     var { name, value } = e.target;\n  //     setuser((prevState) => ({ ...prevState, [name]: value }));\n  //   };\n\n  //   const handleSubmit = (event) => {\n  //     const form = event.currentTarget;\n  //     event.preventDefault();\n  //     axios\n  //       .post(\"http://localhost:8000/tracenet_user/\", user, {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Authorization: `Token ${user_data.key}`,\n  //         },\n  //       })\n  //       .then((res) => {\n  //         localStorage.setItem(\n  //           \"user_data\",\n  //           JSON.stringify({ ...user_data, tracenet_data: res.data })\n  //         );\n  //         navigate(\"/dashboard/user-detail\");\n  //       })\n  //       .catch((err) => {\n  //         Object.values(err.response.data).map((data) => {\n  //           errors.push(data);\n  //         });\n  //         alert(errors);\n  //       });\n  //   };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var resetForm = _ref.resetForm;\n      axios.post(\"http://localhost:8000/tracenet_user/\", values, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(user_data.key)\n        }\n      }).then(function (res) {\n        localStorage.setItem(\"user_data\", JSON.stringify(_objectSpread({}, user_data, {\n          tracenet_data: res.data\n        })));\n        navigate(\"/dashboard/user-detail\");\n      }).catch(function (err) {\n        Object.values(err.response.data).map(function (data) {\n          errors.push(data);\n        });\n      });\n      resetForm(initialValues);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var errors = _ref2.errors,\n      touched = _ref2.touched;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-card col-md-6 offset-md-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-dark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Create Tracenet User\")), /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputTracentUser\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \"Tracenet Username\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"tracenet_username\",\n      className: \"form-control\",\n      placeholder: \"Enter Username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }), errors.tracenet_username && touched.tracenet_username ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, errors.tracenet_username) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputTracenetPassword1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"Tracenet Password\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"tracenet_password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }), errors.tracenet_password && touched.tracenet_password ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, errors.tracenet_password) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block btn-dark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }));\n}\nexport default Create_user;","map":{"version":3,"names":["React","useState","Formik","Form","Field","useNavigate","useLocation","axios","Yup","Link","Create_user","errors","user_data","JSON","parse","localStorage","getItem","tracenet_username","tracenet_password","user","id","setuser","initialValues","navigate","validationSchema","object","string","required","values","resetForm","post","headers","Authorization","key","then","res","setItem","stringify","tracenet_data","data","catch","err","Object","response","map","push","touched"],"sources":["/home/pallavi/projects/react/apeda-traceability/src/Screens/User_Setting/create_user/create_user.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\n\nfunction Create_user() {\n  const errors = [];\n  const user_data = JSON.parse(localStorage.getItem(\"user_data\"));\n  const [user, setuser] = useState({\n    tracenet_username: \"\",\n    tracenet_password: \"\",\n    user: user_data.id,\n  });\n\n  const initialValues = {\n    tracenet_username: \"\",\n    tracenet_password: \"\",\n    user: user_data.id,\n  };\n\n  const navigate = useNavigate();\n  const validationSchema = Yup.object({\n    tracenet_username: Yup.string().required(\"*Email is required\"),\n    tracenet_password: Yup.string().required(\"*Password is required\"),\n  });\n\n//   const handleChange = (e) => {\n//     var { name, value } = e.target;\n//     setuser((prevState) => ({ ...prevState, [name]: value }));\n//   };\n\n//   const handleSubmit = (event) => {\n//     const form = event.currentTarget;\n//     event.preventDefault();\n//     axios\n//       .post(\"http://localhost:8000/tracenet_user/\", user, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Token ${user_data.key}`,\n//         },\n//       })\n//       .then((res) => {\n//         localStorage.setItem(\n//           \"user_data\",\n//           JSON.stringify({ ...user_data, tracenet_data: res.data })\n//         );\n//         navigate(\"/dashboard/user-detail\");\n//       })\n//       .catch((err) => {\n//         Object.values(err.response.data).map((data) => {\n//           errors.push(data);\n//         });\n//         alert(errors);\n//       });\n//   };\n\n  return (\n    <div className=\"content-wrapper\">\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { resetForm }) => {\n          axios\n            .post(\"http://localhost:8000/tracenet_user/\", values, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Token ${user_data.key}`,\n              },\n            })\n            .then((res) => {\n              localStorage.setItem(\n                \"user_data\",\n                JSON.stringify({ ...user_data, tracenet_data: res.data })\n              );\n              navigate(\"/dashboard/user-detail\");\n            })\n            .catch((err) => {\n              Object.values(err.response.data).map((data) => {\n                errors.push(data);\n              });\n            });\n          \n          resetForm(initialValues);\n        }}\n      >\n        {({ errors, touched }) => (\n          <div className=\"user-card col-md-6 offset-md-3\">\n            <div className=\"card card-dark\">\n              <div className=\"card-header\">\n                <h3 className=\"card-title\">Create Tracenet User</h3>\n              </div>\n            <Form>\n              <div className=\"card-body\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputTracentUser\">Tracenet Username</label>\n                  <Field\n                    name=\"tracenet_username\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Username\"\n                  />\n                  {errors.tracenet_username && touched.tracenet_username ? (\n                    <div>{errors.tracenet_username}</div>\n                  ) : null}\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputTracenetPassword1\">Tracenet Password</label>\n                  <Field\n                    name=\"tracenet_password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                  />\n                  {errors.tracenet_password && touched.tracenet_password ? (\n                    <div>{errors.tracenet_password}</div>\n                  ) : null}\n                </div>\n              </div>\n              <div className=\"card-footer\">\n              <button type=\"submit\" className=\"btn btn-block btn-dark\">\n                Submit\n              </button>\n              </div>\n            </Form>\n          </div>\n          </div>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Create_user;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}