{"ast":null,"code":"import _defineProperty from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pallavi/projects/react/apeda-traceability/src/Screens/demo/demo.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap';\nfunction Demo() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    options = _useState2[0],\n    setOptions = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    option = _useState4[0],\n    setOption = _useState4[1];\n  var obj = [{\n    \"option\": \"Internal Inspection\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"mid_year\": \"Mid Year\",\n        \"scope_renewal\": \"Scope Renewal\"\n      },\n      \"Select_Year\": {\n        \"Current\": \"Current\",\n        \"Previous\": \"Previous\"\n      }\n    }]\n  }, {\n    \"option\": \"Harvesting\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      },\n      \"Select_Season\": {\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\"\n      },\n      \"Farm_Type\": {\n        \"single_farm\": \"Single Farm\",\n        \"multi_farm\": \"Multi_Farm\"\n      }\n    }]\n  }, {\n    \"option\": \"Lot Creation\",\n    \"nested_option\": [{\n      \"Select_Scope\": {\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      },\n      \"Organic_Status\": {\n        \"organic\": \"Organic\",\n        \"2nd year conversion\": \"2nd Year Conversion\",\n        \"1st year conversion\": \"1st Year Conversion\",\n        \"3rd year conversion\": \"3rd Year Conversion\",\n        \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n        \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n      }\n    }]\n  }, {\n    \"option\": \"Crop Entry\",\n    \"nested_option\": [{\n      \"select_Season\": {\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\",\n        \"post harvest activities\": \"Post Harvest Activities\"\n      },\n      \"Select_Scope\": {\n        \"old_ICS\": \"Old ICS\",\n        \"new_ICS\": \"New ICS\",\n        \"amendment\": \"Amendment\"\n      }\n    }]\n  }];\n  var handleChange = function handleChange(event) {\n    event.persist();\n    var name = event.target.name;\n    var value = event.target.value;\n    // console.log(value)\n    setOptions(function (values) {\n      return _objectSpread({}, values, _defineProperty({}, name, value));\n    });\n    setOption(value);\n  };\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  });\n  {/* <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n              <Form.Label>Flow</Form.Label><br></br>\n              <Form.Select aria-label=\"Default select example\" size='lg' className='selectflow' name='flow' value={options.flow || \"\"} onChange={handleChange}>\n                  <option>select Flow</option>\n                  <option value=\"Farmer Registration\">Farmer Registration</option>\n                  <option value=\"Internal Inspection\">Internal Inspection</option>\n                  <option value=\"Lot Creation\">Lot Creation</option>\n                  <option value=\"Crop Entry\">Crop Entry</option>\n                  <option value=\"Harvesting\">Harvesting</option>\n              </Form.Select>\n          </Form.Group>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n              {\n                  obj.map(data => {\n                      if (data.option === option) {\n                          return (data.nested_option.map((n_val) => {\n                              return (\n                                  <>{Object.entries(n_val).map(d => {\n                                      return (\n                                          <>\n                                              <Form.Label>{d[0]}</Form.Label><br /> */}\n  {/* <h3>\n                                                  {d[0]}\n                                              </h3> */}\n  {/* { */}\n  // Object.values(d[1]).map(n => {\n  //     return (\n  //         <> \n  //         <Form.Check\n  //             inline\n  //             type=\"radio\"\n  //             label={n}\n  // checked={kindOfStand === { n }}\n  //     onChange={handleChange}\n  //     value={n}\n  // /><br />\n  // </>\n  // <p>{n}</ p>\n  // )\n  //                                         })}\n  //                                 </>\n  //                             )\n  //                         })}\n  //                         </>\n  //                     )\n  //                 })\n  //                 )\n  //             }\n  //         })\n  //     }\n  // </Form.Group>\n}\n\nexport default Demo;","map":{"version":3,"names":["React","useState","Button","Form","InputGroup","Row","Col","Demo","options","setOptions","option","setOption","obj","handleChange","event","persist","name","target","value","values","handleSubmit","preventDefault"],"sources":["/home/pallavi/projects/react/apeda-traceability/src/Screens/demo/demo.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap'\n\nfunction Demo() {\n\n    const [options, setOptions] = useState({});\n    const [option, setOption] = useState('');\n    const obj = [\n        {\n            \"option\": \"Internal Inspection\",\n            \"nested_option\": [{\n                \"Select_Scope\": {\n                    \"mid_year\": \"Mid Year\",\n                    \"scope_renewal\": \"Scope Renewal\"\n                },\n                \"Select_Year\": {\n                    \"Current\": \"Current\",\n                    \"Previous\": \"Previous\"\n                }\n\n            }]\n        },\n        {\n            \"option\": \"Harvesting\",\n            \"nested_option\": [{\n                \"Select_Scope\": {\n                    \"current\": \"Current\",\n                    \"previous\": \"Previous\"\n                },\n                \"Select_Season\": {\n                    \"kharif\": \"Kharif\",\n                    \"rabi\": \"Rabi\",\n                    \"zaid\": \"Zaid\",\n                    \"perennial\": \"Perennial\"\n                },\n                \"Farm_Type\": {\n                    \"single_farm\": \"Single Farm\",\n                    \"multi_farm\": \"Multi_Farm\"\n                }\n            }]\n        },\n        {\n            \"option\": \"Lot Creation\",\n            \"nested_option\": [{\n                \"Select_Scope\": {\n                    \"current\": \"Current\",\n                    \"previous\": \"Previous\"\n                },\n                \"Organic_Status\": {\n                    \"organic\": \"Organic\",\n                    \"2nd year conversion\": \"2nd Year Conversion\",\n                    \"1st year conversion\": \"1st Year Conversion\",\n                    \"3rd year conversion\": \"3rd Year Conversion\",\n                    \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n                    \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n                }\n            }]\n\n        },\n        {\n            \"option\": \"Crop Entry\",\n            \"nested_option\": [{\n                \"select_Season\": {\n                    \"kharif\": \"Kharif\",\n                    \"rabi\": \"Rabi\",\n                    \"zaid\": \"Zaid\",\n                    \"perennial\": \"Perennial\",\n                    \"post harvest activities\": \"Post Harvest Activities\"\n                },\n                \"Select_Scope\": {\n                    \"old_ICS\": \"Old ICS\",\n                    \"new_ICS\": \"New ICS\",\n                    \"amendment\": \"Amendment\"\n                }\n            }]\n        }\n    ]\n    const handleChange = (event) => {\n        event.persist();\n        const name = event.target.name;\n        const value = event.target.value;\n        // console.log(value)\n        setOptions(values => ({ ...values, [name]: value }))\n        setOption(value)\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    return (\n        <div className='content-wrapper'>\n        </div>\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    {/* <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n                <Form.Label>Flow</Form.Label><br></br>\n                <Form.Select aria-label=\"Default select example\" size='lg' className='selectflow' name='flow' value={options.flow || \"\"} onChange={handleChange}>\n                    <option>select Flow</option>\n                    <option value=\"Farmer Registration\">Farmer Registration</option>\n                    <option value=\"Internal Inspection\">Internal Inspection</option>\n                    <option value=\"Lot Creation\">Lot Creation</option>\n                    <option value=\"Crop Entry\">Crop Entry</option>\n                    <option value=\"Harvesting\">Harvesting</option>\n                </Form.Select>\n            </Form.Group>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\n                {\n                    obj.map(data => {\n                        if (data.option === option) {\n                            return (data.nested_option.map((n_val) => {\n                                return (\n                                    <>{Object.entries(n_val).map(d => {\n                                        return (\n                                            <>\n                                                <Form.Label>{d[0]}</Form.Label><br /> */}\n    {/* <h3>\n                                                    {d[0]}\n                                                </h3> */}\n    {/* { */ }\n    // Object.values(d[1]).map(n => {\n    //     return (\n    //         <> \n    //         <Form.Check\n    //             inline\n    //             type=\"radio\"\n    //             label={n}\n    // checked={kindOfStand === { n }}\n    //     onChange={handleChange}\n    //     value={n}\n    // /><br />\n    // </>\n    // <p>{n}</ p>\n    // )\n    //                                         })}\n    //                                 </>\n    //                             )\n    //                         })}\n    //                         </>\n    //                     )\n    //                 })\n    //                 )\n    //             }\n    //         })\n    //     }\n    // </Form.Group>\n\n}\n\nexport default Demo\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}