{"ast":null,"code":"import _defineProperty from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/pallavi/projects/react/apeda-traceability/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pallavi/projects/react/apeda-traceability/src/Screens/Tracenet/tracenet.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap';\nimport './tracenet.css';\nfunction Tracenet() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputs = _useState2[0],\n    setInputs = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    options = _useState4[0],\n    setOptions = _useState4[1];\n  var _useState5 = useState({\n      kindOfStand: \"\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    item = _useState6[0],\n    setItem = _useState6[1]; // console.log(item)\n  var kindOfStand = item.kindOfStand;\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    validated = _useState8[0],\n    setValidated = _useState8[1]; // const [visible, setVisible] = useState(false);\n  // const [optionTwo, setOptionTwo] = useState(false);\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    option = _useState10[0],\n    setOption = _useState10[1];\n  var obj = [{\n    \"option\": \"Internal Inspection\",\n    \"nested_option\": {\n      \"Select_Scope\": [{\n        \"mid_year\": \"Mid Year\",\n        \"scope_renewal\": \"Scope Renewal\"\n      }]\n    }\n  }, {\n    \"option\": \"Crop Entry\",\n    \"nested_option\": {\n      \"select_Season\": [{\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\",\n        \"post harvest activities\": \"Post Harvest Activities\"\n      }],\n      \"Select_Scope\": [{\n        \"old_ICS\": \"Old ICS\",\n        \"new_ICS\": \"New ICS\",\n        \"amendment\": \"Amendment\"\n      }]\n    }\n  }, {\n    \"option\": \"Lot Creation\",\n    \"nested_option\": {\n      \"Select_Scope\": [{\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      }],\n      \"Organic_Status\": [{\n        \"organic\": \"Organic\",\n        \"2nd year conversion\": \"2nd Year Conversion\",\n        \"1st year conversion\": \"1st Year Conversion\",\n        \"3rd year conversion\": \"3rd Year Conversion\",\n        \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n        \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n      }]\n    }\n  }, {\n    \"option\": \"Harvesting\",\n    \"nested_option\": {\n      \"Select_Scope\": [{\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      }],\n      \"Select_Season\": [{\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\"\n      }],\n      \"Farm_Type\": [{\n        \"single_farm\": \"Single Farm\",\n        \"multi_farm\": \"Multi_Farm\"\n      }]\n    }\n  }];\n  var handleChange = function handleChange(event) {\n    event.persist();\n    var name = event.target.name;\n    var value = event.target.value;\n    console.log(value);\n    setInputs(function (values) {\n      return _objectSpread({}, values, _defineProperty({}, name, value));\n    });\n    setOptions(function (values) {\n      return _objectSpread({}, values, _defineProperty({}, name, value));\n    });\n    setItem(function (prevState) {\n      return _objectSpread({}, prevState, {\n        kindOfStand: event.target.value\n      });\n    });\n    setOption(value);\n  };\n  var handleSubmit = function handleSubmit(event) {\n    var form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    // console.log(inputs);\n    // console.log(options);\n    // console.log(item)\n  };\n\n  // // Radio button validation\n\n  // const handleChange = e => {\n  //   e.persist();\n  //   console.log(e.target.value);\n\n  //   setItem(prevState => ({\n  //     ...prevState,\n  //     kindOfStand: e.target.value\n  //   }));\n  // };\n\n  // const handleSubmits = e => {\n  //   e.preventDefault();\n  //   alert(`${kindOfStand}`);\n  // };\n\n  // // form validation\n  // const [validated, setValidated] = useState(false);\n\n  // const handleSubmit = (event) => {\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   setValidated(true);\n  // };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Sign In using Tracenet credentials\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"8\",\n    controlId: \"validationCustomUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n    hasValidation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"inputGroupPrepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, \"@\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true,\n    name: \"username\",\n    onChange: handleChange,\n    value: inputs.username || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }, \"Please choose a username.\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"8\",\n    controlId: \"validationCustom01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"password\",\n    placeholder: \"****\",\n    value: inputs.password || \"\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Incorrect Password\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"8\",\n    controlId: \"validationCustom02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"Flow\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(Form.Select, {\n    \"aria-label\": \"Default select example\",\n    size: \"lg\",\n    className: \"selectflow\",\n    name: \"flow\",\n    value: options.flow || \"\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, \"select Flow\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Farmer Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, \"Farmer Registration\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Internal Inspection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }\n  }, \"Internal Inspection\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Lot Creation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, \"Lot Creation\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Crop Entry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, \"Crop Entry\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"5\",\n    controlId: \"kindOfStand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, obj.map(function (data) {\n    console.log(data);\n    console.log(\"-----------\");\n    Object.entries(data).map(function (val1) {\n      console.log(val1);\n      console.log(\"-----------\");\n      Object.values(val1).map(function (val2) {\n        console.log(val2);\n        if (typeof val2 === \"object\") {\n          console.log(\"------object-----\");\n          Object.entries(val2).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              key2 = _ref2[0],\n              val2 = _ref2[1];\n          });\n        }\n      });\n    });\n  })), /*#__PURE__*/React.createElement(Form.Check, {\n    required: true,\n    label: \"I agree that this tool will fill the captcha and data on Tracenet website on my behalf.\",\n    feedback: \"You must agree before submitting.\",\n    feedbackType: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 17\n    }\n  }, \"Submit form\")))))));\n}\nexport default Tracenet;","map":{"version":3,"names":["React","useState","Button","Form","InputGroup","Row","Col","Tracenet","inputs","setInputs","options","setOptions","kindOfStand","item","setItem","validated","setValidated","option","setOption","obj","handleChange","event","persist","name","target","value","console","log","values","prevState","handleSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","username","password","flow","map","data","Object","entries","val1","val2","forEach","key2"],"sources":["/home/pallavi/projects/react/apeda-traceability/src/Screens/Tracenet/tracenet.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, InputGroup, Row, Col } from 'react-bootstrap'\nimport './tracenet.css'\n\n\nfunction Tracenet() {\n\n  const [inputs, setInputs] = useState({});\n  const [options, setOptions] = useState({});\n  const [item, setItem] = useState({ kindOfStand: \"\" });\n  // console.log(item)\n  const { kindOfStand } = item;\n  const [validated, setValidated] = useState(false);\n  // const [visible, setVisible] = useState(false);\n  // const [optionTwo, setOptionTwo] = useState(false);\n  const [option, setOption] = useState('');\n\n  const obj = [{\n    \"option\": \"Internal Inspection\",\n    \"nested_option\": {\n      \"Select_Scope\": [{\n        \"mid_year\": \"Mid Year\",\n        \"scope_renewal\": \"Scope Renewal\"\n      }]\n    }\n  },\n  {\n    \"option\": \"Crop Entry\",\n    \"nested_option\": {\n      \"select_Season\": [{\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\",\n        \"post harvest activities\": \"Post Harvest Activities\"\n      }],\n      \"Select_Scope\": [{\n        \"old_ICS\": \"Old ICS\",\n        \"new_ICS\": \"New ICS\",\n        \"amendment\": \"Amendment\"\n      }]\n    },\n  },\n  {\n    \"option\": \"Lot Creation\",\n    \"nested_option\": {\n      \"Select_Scope\": [{\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      }],\n      \"Organic_Status\": [{\n        \"organic\": \"Organic\",\n        \"2nd year conversion\": \"2nd Year Conversion\",\n        \"1st year conversion\": \"1st Year Conversion\",\n        \"3rd year conversion\": \"3rd Year Conversion\",\n        \"2nd year conversion to organic\": \"2nd Year Conversion to Organic\",\n        \"3rd year conversion to organic\": \"3rd Year Conversion to Organic\"\n      }]\n    }\n\n  },\n  {\n    \"option\": \"Harvesting\",\n    \"nested_option\": {\n      \"Select_Scope\": [{\n        \"current\": \"Current\",\n        \"previous\": \"Previous\"\n      }],\n      \"Select_Season\": [{\n        \"kharif\": \"Kharif\",\n        \"rabi\": \"Rabi\",\n        \"zaid\": \"Zaid\",\n        \"perennial\": \"Perennial\"\n      }],\n      \"Farm_Type\": [{\n        \"single_farm\": \"Single Farm\",\n        \"multi_farm\": \"Multi_Farm\"\n      }]\n    }\n  }\n  ]\n\n  const handleChange = (event) => {\n    event.persist();\n    const name = event.target.name;\n    const value = event.target.value;\n    console.log(value)\n    setInputs(values => ({ ...values, [name]: value }))\n    setOptions(values => ({ ...values, [name]: value }))\n    setItem(prevState => ({ ...prevState, kindOfStand: event.target.value }));\n    setOption(value);\n  };\n\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    // console.log(inputs);\n    // console.log(options);\n    // console.log(item)\n  }\n\n\n\n\n\n\n\n\n\n\n\n  // // Radio button validation\n\n\n  // const handleChange = e => {\n  //   e.persist();\n  //   console.log(e.target.value);\n\n  //   setItem(prevState => ({\n  //     ...prevState,\n  //     kindOfStand: e.target.value\n  //   }));\n  // };\n\n  // const handleSubmits = e => {\n  //   e.preventDefault();\n  //   alert(`${kindOfStand}`);\n  // };\n\n\n  // // form validation\n  // const [validated, setValidated] = useState(false);\n\n  // const handleSubmit = (event) => {\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   setValidated(true);\n  // };\n  return (\n    <div class=\"content-wrapper\">\n      <div class=\"content\">\n        <div class=\"container-fluid\">\n          <div class=\"card\" >\n            <div class=\"card-header\">Sign In using Tracenet credentials</div>\n            <div class=\"card-body\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Row className=\"mb-3\">\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustomUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <InputGroup hasValidation>\n                      <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        aria-describedby=\"inputGroupPrepend\"\n                        required\n                        name=\"username\"\n                        onChange={handleChange}\n                        value={inputs.username || \"\"}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please choose a username.\n                      </Form.Control.Feedback>\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustom01\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      name=\"password\"\n                      placeholder=\"****\"\n                      value={inputs.password || \"\"}\n                      onChange={handleChange}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">Incorrect Password</Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\n                    <Form.Label>Flow</Form.Label><br></br>\n                    <Form.Select aria-label=\"Default select example\" size='lg' className='selectflow' name='flow' value={options.flow || \"\"} onChange={handleChange}>\n                      <option>select Flow</option>\n                      <option value=\"Farmer Registration\">Farmer Registration</option>\n                      <option value=\"Internal Inspection\">Internal Inspection</option>\n                      <option value=\"Lot Creation\">Lot Creation</option>\n                      <option value=\"Crop Entry\">Crop Entry</option>\n                    </Form.Select>\n                    <Form.Control.Feedback >Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n\n                </Row>\n\n\n                {/* Form for Internal inspection */}\n                <Form.Group className=\"mb-3\">\n                  <Form.Group as={Col} md=\"5\" controlId=\"kindOfStand\">\n                    {/* {obj.map(data => {\n                      if (option === data.option) {\n                        return (\n                          Object.entries(data.nested_option).forEach(([key, value]) => {\n                            console.log(key, value, typeof (value))\n                            Object.entries(value).forEach(([key1, val1]) => {\n                              console.log(key1, val1, typeof (val1))\n                              Object.entries(val1).map((d, i) => {\n                                console.log(d[0], i)\n                                const values = d[0]\n                                return (\n                                  <>\n                                    <Form.Label>{key}</Form.Label>\n                                    <Form.Check\n                                      inline\n                                      name='radio'\n                                      type=\"radio\"\n                                      aria-label=\"radio 1\"\n                                      label={d[0]}\n                                      checked={kindOfStand === { values}}\n                                      onChange={handleChange}\n                                      value={d[0]}\n                                    />\n                                  </>\n                                )\n                              })\n                            })\n                          })\n                        )\n                      }\n                    }\n\n                    )} */}\n\n\n\n\n                    {\n                      obj.map(data => {\n                        console.log(data)\n                        console.log(\"-----------\")\n                        Object.entries(data).map((val1) => {\n                          console.log(val1)\n                          console.log(\"-----------\")\n                          Object.values(val1).map(val2 => {\n                            console.log(val2)\n                            if (typeof (val2) === \"object\") {\n                              console.log(\"------object-----\")\n                              Object.entries(val2).forEach(([key2,val2]) => {})\n\n                            }\n\n                          })\n                        })\n                      })\n                    }\n                  </Form.Group>\n\n                  {/* {\n                    // obj.map((data) => {\n                      // console.log(\"value\", value, \"data\", data[\"option\"])\n                      if (option === data['option']) {\n                        // console.log(data['nested_option'])\n                        return (\n                          <div>\n                          \n                        <Form.Group as={Col} md=\"4\" controlId=\"kindOfStand\">\n                          <Form.Label>{data['nested_option']['mid_year']}</Form.Label><br />\n                        </Form.Group>\n                        </div>\n                        )\n                        return (\n                          <>\n                            {\n                                Object.entries(data.nested_option).forEach(([key, value]) => {\n                                  console.log(`=========>>${key}:${value}`) \n                                  return(\n                                    <h1>data</h1>\n                                    <Form.Group as={Col} md=\"4\" controlId=\"kindOfStand\">\n                                      <Form.Label>Select Farm Type</Form.Label><br />\n                                      <Form.Check \n                                        inline\n                                        name = 'radio'\n                                        type=\"radio\"\n                                        aria-label=\"radio 1\"\n                                        label=\"Single Farm\"\n                                        checked={kindOfStand === \"Single Farm\"}\n                                        onChange={handleChange}\n                                        value = {value}\n                                      />\n                                    </Form.Group>\n                                    )\n                                })\n                               \n                            }\n                          \n                          </>\n\n                        );\n                       \n\n                      }\n                    })\n                  } */}\n\n\n\n\n                  {/* <Form.Group as={Col} md=\"8\" controlId=\"kindOfStand\">\n                   <Form.Check\n                        inline\n                        name = 'radio'\n                        type=\"radio\"\n                        aria-label=\"radio 1\"\n                        label=\"Mid Year\"\n                        checked={kindOfStand === \"Mid Year\"}\n                        onChange={handleChange}\n                        value = 'Mid Year'\n                      />\n                      <Form.Check\n                        inline\n                        name = 'radio'\n                        value=\"Scope Renewal\"\n                        type=\"radio\"\n                        aria-label=\"radio 2\"\n                        label=\"Scope Renewal\"\n                        onChange={handleChange}\n                        checked={kindOfStand === \"Scope Renewal\"}\n                      />\n                  </Form.Group> */}\n\n\n                  {/* orm for harvesting  */}\n                  {/* <Form.Group as={Col} md=\"4\" controlId=\"kindOfStand\">\n                  <Form.Label>Select Farm Type</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Single Farm\"\n                      checked={kindOfStand === \"Single Farm\"}\n                      onChange={handleChange}\n                      value = 'Single Farm'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Multi Farm\"\n                      checked={kindOfStand === \"Multi Farm\"}\n                      onChange={handleChange}\n                      value = 'Multi Farm'\n                    />\n                    <Form.Label>Select Season</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Kharif\"\n                      checked={kindOfStand === \"Kharif\"}\n                      onChange={handleChange}\n                      value = 'Kharif'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Rabi\"\n                      checked={kindOfStand === \"Rabi\"}\n                      onChange={handleChange}\n                      value = 'Rabi'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Zaid\"\n                      checked={kindOfStand === \"Zaid\"}\n                      onChange={handleChange}\n                      value = 'Zaid'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Perennial\"\n                      checked={kindOfStand === \"Perennial\"}\n                      onChange={handleChange}\n                      value = 'Perennial'\n                    />\n                    <br /><Form.Label>Select Scope</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Current\"\n                      checked={kindOfStand === \"Current\"}\n                      onChange={handleChange}\n                      value = 'Current'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Previous\"\n                      checked={kindOfStand === \"Previous\"}\n                      onChange={handleChange}\n                      value = 'Previous'\n                    />\n                    \n                  </Form.Group> */}\n\n\n                  {/* form for Lot Creation */}\n\n                  {/* <Form.Group as={Col} md=\"4\" controlId=\"kindOfStand\">\n                  <Form.Label>Select Scope</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Current\"\n                      checked={kindOfStand === \"Current\"}\n                      onChange={handleChange}\n                      value = 'Current'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Previous\"\n                      checked={kindOfStand === \"Previous\"}\n                      onChange={handleChange}\n                      value = 'Previous'\n                    />\n                    <Form.Label>Organic Status</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Organic\"\n                      checked={kindOfStand === \"Organic\"}\n                      onChange={handleChange}\n                      value = 'Organic'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"2nd Year Conversion\"\n                      checked={kindOfStand === \"2nd Year Conversion\"}\n                      onChange={handleChange}\n                      value = '2nd Year Conversion'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"1st Year Conversion\"\n                      checked={kindOfStand === \"1st Year Conversion\"}\n                      onChange={handleChange}\n                      value = '1st Year Conversion'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"3rd Year Conversion\"\n                      checked={kindOfStand === \"3rd Year Conversion\"}\n                      onChange={handleChange}\n                      value = '3rd Year Conversion'\n                    />\n                    \n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"2nd Year Conversion to Organic\"\n                      checked={kindOfStand === \"2nd Year Conversion to Organic\"}\n                      onChange={handleChange}\n                      value = '2nd Year Conversion to Organic'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"3rd Year Conversion to Organic\"\n                      checked={kindOfStand === \"3rd Year Conversion to Organic\"}\n                      onChange={handleChange}\n                      value = '3rd Year Conversion to Organic'\n                    />\n                    <Dropdown >\n                      <Dropdown.Toggle className='drop'>\n                          select Harvest Year\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu className='dropmenu'>\n                          <Dropdown.Item>\n                              2022\n                          </Dropdown.Item>\n                          <Dropdown.Item>\n                              2021\n                          </Dropdown.Item>\n                          <Dropdown.Item>\n                              2020\n                          </Dropdown.Item>\n                          <Dropdown.Item>\n                              2019\n                          </Dropdown.Item>\n                      </Dropdown.Menu>\n                  </Dropdown>\n                  </Form.Group> */}\n\n                  {/* form for Crop Entry */}\n                  {/* <Form.Group as={Col} md=\"6\" controlId=\"kindOfStand\">\n                    <Form.Label>Select Season</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Kharif\"\n                      checked={kindOfStand === \"Kharif\"}\n                      onChange={handleChange}\n                      value = 'Kharif'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Rabi\"\n                      checked={kindOfStand === \"Rabi\"}\n                      onChange={handleChange}\n                      value = 'Rabi'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Zaid\"\n                      checked={kindOfStand === \"Zaid\"}\n                      onChange={handleChange}\n                      value = 'Zaid'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Perennial\"\n                      checked={kindOfStand === \"Perennial\"}\n                      onChange={handleChange}\n                      value = 'Perennial'\n                    />\n                    <br /><Form.Label>Select Scope</Form.Label><br />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Old ICS\"\n                      checked={kindOfStand === \"Old ICS\"}\n                      onChange={handleChange}\n                      value = 'Old ICS'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"New ICS\"\n                      checked={kindOfStand === \"New ICS\"}\n                      onChange={handleChange}\n                      value = 'New ICS'\n                    />\n                    <Form.Check \n                      inline\n                      name = 'radio'\n                      type=\"radio\"\n                      aria-label=\"radio 1\"\n                      label=\"Amendment\"\n                      checked={kindOfStand === \"Amendment\"}\n                      onChange={handleChange}\n                      value = 'Amendment'\n                    />\n                    \n                  </Form.Group> */}\n\n                  <Form.Check\n                    required\n                    label=\"I agree that this tool will fill the captcha and data on Tracenet website on my behalf.\"\n                    feedback=\"You must agree before submitting.\"\n                    feedbackType=\"invalid\"\n                  />\n                </Form.Group>\n                <Button type=\"submit\">Submit form</Button>\n              </Form>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Tracenet\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}